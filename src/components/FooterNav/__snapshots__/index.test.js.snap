// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FooterNav /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FooterNav />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.nav>
          <a
            href="/"
            title="About"
          >
            About
          </a>
          <a
            href="/"
            title="Contact"
          >
            Contact
          </a>
          <a
            href="/"
            title="Sign In"
          >
            Sign In
          </a>
        </styled.nav>,
        <styled.p>
          © 2014 - The UX Library
        </styled.p>,
      ],
      "className": "footer-nav",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <a
              href="/"
              title="About"
            >
              About
            </a>,
            <a
              href="/"
              title="Contact"
            >
              Contact
            </a>,
            <a
              href="/"
              title="Sign In"
            >
              Sign In
            </a>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "About",
              "href": "/",
              "title": "About",
            },
            "ref": null,
            "rendered": "About",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Contact",
              "href": "/",
              "title": "Contact",
            },
            "ref": null,
            "rendered": "Contact",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign In",
              "href": "/",
              "title": "Sign In",
            },
            "ref": null,
            "rendered": "Sign In",
            "type": "a",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "© 2014 - The UX Library",
        },
        "ref": null,
        "rendered": "© 2014 - The UX Library",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.nav>
            <a
              href="/"
              title="About"
            >
              About
            </a>
            <a
              href="/"
              title="Contact"
            >
              Contact
            </a>
            <a
              href="/"
              title="Sign In"
            >
              Sign In
            </a>
          </styled.nav>,
          <styled.p>
            © 2014 - The UX Library
          </styled.p>,
        ],
        "className": "footer-nav",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <a
                href="/"
                title="About"
              >
                About
              </a>,
              <a
                href="/"
                title="Contact"
              >
                Contact
              </a>,
              <a
                href="/"
                title="Sign In"
              >
                Sign In
              </a>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "About",
                "href": "/",
                "title": "About",
              },
              "ref": null,
              "rendered": "About",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Contact",
                "href": "/",
                "title": "Contact",
              },
              "ref": null,
              "rendered": "Contact",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign In",
                "href": "/",
                "title": "Sign In",
              },
              "ref": null,
              "rendered": "Sign In",
              "type": "a",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "© 2014 - The UX Library",
          },
          "ref": null,
          "rendered": "© 2014 - The UX Library",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
